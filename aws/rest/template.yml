AWSTemplateFormatVersion: 2010-09-09
Description: Angel tree web app backend
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Runtime: nodejs12.x
    MemorySize: 128
    Timeout: 5
  Api:
    Cors:
      AllowMethods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
      AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
      AllowOrigin: "'*'"

Resources:
  getTreeContentFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.getTreeContentHandler
      Description: Get all angels and gifts data for the Christmas tree
      Policies:
        - DynamoDBReadPolicy:
            TableName: Summary
      Events:
        Api:
          Type: Api
          Properties:
            Path: /tree
            Method: GET
  getChildrenSummaryFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.getChildrenSummaryHandler
      Description: Get children summary data for admin page
      Policies:
        - DynamoDBReadPolicy:
            TableName: Summary
      Events:
        Api:
          Type: Api
          Properties:
            Path: /children
            Method: GET
  getDonationsSummaryFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.getDonationsSummaryHandler
      Description: Get donations summary data for admin page
      Policies:
        - DynamoDBReadPolicy:
            TableName: Summary
      Events:
        Api:
          Type: Api
          Properties:
            Path: /donations
            Method: GET
  getWaitlistSummaryFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.getWaitlistSummaryHandler
      Description: Get Waitlist summary data for admin page
      Policies:
        - DynamoDBReadPolicy:
            TableName: Waitlist
      Events:
        Api:
          Type: Api
          Properties:
            Path: /waitlist
            Method: GET
  getChildInfoByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.getChildInfoByIdHandler
      Description: Get child public info using child id
      Policies:
        - DynamoDBReadPolicy:
            TableName: Child
      Events:
        Api:
          Type: Api
          Properties:
            Path: /child/info/{id}
            Method: GET
  postDonationFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.postDonationHandler
      Description: Post donation form to dynamodb
      Policies:
        - DynamoDBWritePolicy:
            TableName: Donation
        - DynamoDBCrudPolicy:
            TableName: Child
      Events:
        Api:
          Type: Api
          Properties:
            Path: /donate/{id}
            Method: POST
  postChildFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.postChildHandler
      Description: Post new child item to dynamodb
      Policies:
        - DynamoDBWritePolicy:
            TableName: Child
      Events:
        Api:
          Type: Api
          Properties:
            Path: /child
            Method: POST
  postWaitlistFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.postWaitlistHandler
      Description: Post new waitlist item to dynamodb
      Policies:
        - DynamoDBWritePolicy:
            TableName: Waitlist
      Events:
        Api:
          Type: Api
          Properties:
            Path: /waitlist
            Method: POST
  putChildFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.putChildHandler
      Description: Update child item in dynamodb
      Policies:
        - DynamoDBWritePolicy:
            TableName: Child
      Events:
        Api:
          Type: Api
          Properties:
            Path: /child/{id}
            Method: PUT
  deleteChildFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.deleteChildHandler
      Description: Delete child item in dynamodb
      Policies:
        - DynamoDBCrudPolicy:
            TableName: Child
      Events:
        Api:
          Type: Api
          Properties:
            Path: /child/{id}
            Method: DELETE
  putDonationFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.putDonationHandler
      Description: Update donation item in dynamodb
      Policies:
        - DynamoDBWritePolicy:
            TableName: Donation
      Events:
        Api:
          Type: Api
          Properties:
            Path: /donation/{id}
            Method: PUT
  deleteDonationFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.deleteDonationHandler
      Description: Delete donation item in dynamodb
      Policies:
        - DynamoDBCrudPolicy:
            TableName: Donation
        - DynamoDBCrudPolicy:
            TableName: Child
      Events:
        Api:
          Type: Api
          Properties:
            Path: /donation/{id}
            Method: DELETE
Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
